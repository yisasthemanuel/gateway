<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.0.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>org.jlobato.gateway</groupId>
	<artifactId>gateway</artifactId>
	<version>0.0.2-SNAPSHOT</version>
	<name>yisas-gateway</name>
	<description>Este es el Yisas Gateway</description>

	<properties>
		<java.version>1.8</java.version>
		<docker.image.prefix>yisasthemanuel</docker.image.prefix>
		<spring-cloud.version>Hoxton.SR5</spring-cloud.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-gateway</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>		
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>			

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
<!-- 			<plugin> -->
<!-- 				 <groupId>org.jacoco</groupId> -->
<!-- 				<artifactId>jacoco-maven-plugin</artifactId> -->
<!-- 				<version>0.8.5</version> -->
<!-- 				<executions> -->
<!-- 					<execution> -->
<!-- 						<id>default-prepare-agent</id> -->
<!-- 						<goals> -->
<!-- 							<goal>prepare-agent</goal> -->
<!-- 						</goals> -->
<!-- 					</execution> -->
<!-- 					<execution> -->
<!-- 						<id>report</id> -->
<!-- 						<phase>test</phase> -->
<!-- 						<goals> -->
<!-- 							<goal>report</goal> -->
<!-- 						</goals> -->
<!-- 					</execution> -->
<!-- 				</executions> -->
<!-- 			</plugin> -->
			<plugin>
	            <groupId>com.spotify</groupId>
	            <artifactId>dockerfile-maven-plugin</artifactId>
	            <version>1.4.9</version>
	            <configuration>
	                <repository>${docker.image.prefix}/${project.artifactId}</repository>
		            <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
		            <serverId>docker-hub</serverId>
         			<registryUrl>https://index.docker.io/v1/</registryUrl>
        	 		<forceTags>true</forceTags>
         			<imageTags>
           				<imageTag>${project.version}</imageTag>
         			</imageTags>
         			<resources>
           				<resource>
             				<targetPath>/</targetPath>
             				<directory>${project.build.directory}</directory>
             				<include>${project.build.finalName}.jar</include>
           				</resource>
         			</resources>
      				<buildArgs>
        				<JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
      				</buildArgs>
	            </configuration>
	            <executions>
	         		<execution>
	           			<id>build-image</id>
	           			<phase>package</phase>
	           			<goals>
	             			<goal>build</goal>
	           			</goals>
	           			<configuration>
	          	   			<imageName>${docker.image.prefix}/${project.artifactId}:${project.version}</imageName>
	          	   			<tag>${project.version}</tag>
	           			</configuration>
	         		</execution>
	         		<execution>
	           			<id>push-image</id>
	           			<phase>install</phase>
	           			<goals>
	             			<goal>push</goal>
	           			</goals>
	           			<configuration>
	          	   			<imageName>${docker.image.prefix}/${project.artifactId}:${project.version}</imageName>
	          	   			<tag>${project.version}</tag>
	           			</configuration>
	         		</execution>
	       		</executions>
        	</plugin>
		</plugins>
	</build>

</project>
